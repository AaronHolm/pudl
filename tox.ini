[tox]
envlist =
    etl
    validate
    docs
    build
    release

[testenv]
whitelist_externals =
    bash
# shared directory for re-used packages
envdir = {toxinidir}/.env_pudl
passenv =
    CI
    TRAVIS
    TRAVIS_*

# Test the ETL processing pipeline:
[testenv:etl]
extras =
    parquet
    test
commands =
    pytest {posargs} --disable-warnings --log-cli-level=info --log-cli-format="%(asctime)s [%(levelname)8s] %(name)s:%(lineno)s %(message)s" --log-date-format="%Y-%m-%d %H:%M:%S" --cov-report=term --cov-report=xml --cov-config=.coveragerc --cov={envsitepackagesdir}/pudl test/etl_test.py

 # Data validation tests / notebooks
[testenv:validate]
extras =
    parquet
    test
    validate
commands =
    pytest --disable-warnings --live_pudl_db --live_ferc_db test/validate --pudl_in=AUTO --pudl_out=AUTO
    pytest --disable-warnings -sv --nbval-lax test/notebooks
    pytest --disable-warnings -sv --nbval-lax src/pudl/package_data/notebooks
    bash -c 'rm -f src/pudl/package_data/notebooks/*.csv'

# Test building the Sphinx docs:
[testenv:docs]
extras =
    doc
commands =
    bash -c 'rm -rf docs/_build'
    sphinx-build -b html docs docs/_build/html
    sphinx-build -b latex docs docs/_build/latex
    sphinx-build -b epub docs docs/_build/epub

# Release tooling
[testenv:build]
basepython = python3
skip_install = true
deps =
    wheel
    setuptools
    setuptools_scm
commands =
    python setup.py sdist bdist_wheel

[testenv:release]
basepython = python3
skip_install = true
deps =
    {[testenv:build]deps}
    twine
commands =
    {[testenv:build]commands}
    twine upload --verbose --skip-existing --repository-url https://test.pypi.org/legacy/ dist/*
